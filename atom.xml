<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鄢玉兵的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yanyubing.xyz/"/>
  <updated>2020-10-24T07:24:56.815Z</updated>
  <id>https://yanyubing.xyz/</id>
  
  <author>
    <name>鄢玉兵</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Interviews, Case Studies, and Success Stories</title>
    <link href="https://yanyubing.xyz/2020/10/24/Interviews,%20Case%20Studies,%20and%20Success%20Stories/"/>
    <id>https://yanyubing.xyz/2020/10/24/Interviews,%20Case%20Studies,%20and%20Success%20Stories/</id>
    <published>2020-10-24T07:24:56.815Z</published>
    <updated>2020-10-24T07:24:56.815Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Image Search Engines</title>
    <link href="https://yanyubing.xyz/2020/10/24/Image%20Search%20Engines/"/>
    <id>https://yanyubing.xyz/2020/10/24/Image%20Search%20Engines/</id>
    <published>2020-10-24T07:24:39.267Z</published>
    <updated>2020-10-24T07:24:39.267Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Working with Video</title>
    <link href="https://yanyubing.xyz/2020/10/24/Working%20with%20Video/"/>
    <id>https://yanyubing.xyz/2020/10/24/Working%20with%20Video/</id>
    <published>2020-10-24T07:24:27.165Z</published>
    <updated>2020-10-24T07:24:27.165Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Medical Computer Vision</title>
    <link href="https://yanyubing.xyz/2020/10/24/Medical%20Computer%20Vision/"/>
    <id>https://yanyubing.xyz/2020/10/24/Medical%20Computer%20Vision/</id>
    <published>2020-10-24T07:24:08.913Z</published>
    <updated>2020-10-24T07:24:08.913Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Computer Vision on the Raspberry Pi</title>
    <link href="https://yanyubing.xyz/2020/10/24/Computer%20Vision%20on%20the%20Raspberry%20Pi/"/>
    <id>https://yanyubing.xyz/2020/10/24/Computer%20Vision%20on%20the%20Raspberry%20Pi/</id>
    <published>2020-10-24T07:23:56.595Z</published>
    <updated>2020-10-24T07:23:56.595Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Embedded and IoT Computer Vision</title>
    <link href="https://yanyubing.xyz/2020/10/24/Embedded%20and%20IoT%20Computer%20Vision/"/>
    <id>https://yanyubing.xyz/2020/10/24/Embedded%20and%20IoT%20Computer%20Vision/</id>
    <published>2020-10-24T07:23:43.105Z</published>
    <updated>2020-10-24T07:23:43.105Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Instance Segmentation and Semantic Segmentation</title>
    <link href="https://yanyubing.xyz/2020/10/24/Instance%20Segmentation%20and%20Semantic%20Segmentation/"/>
    <id>https://yanyubing.xyz/2020/10/24/Instance%20Segmentation%20and%20Semantic%20Segmentation/</id>
    <published>2020-10-24T07:23:22.194Z</published>
    <updated>2020-10-24T07:23:22.194Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Object Tracking</title>
    <link href="https://yanyubing.xyz/2020/10/24/Object%20Tracking/"/>
    <id>https://yanyubing.xyz/2020/10/24/Object%20Tracking/</id>
    <published>2020-10-24T07:23:06.857Z</published>
    <updated>2020-10-24T07:23:06.857Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Object Detection</title>
    <link href="https://yanyubing.xyz/2020/10/24/Object%20Detection/"/>
    <id>https://yanyubing.xyz/2020/10/24/Object%20Detection/</id>
    <published>2020-10-24T07:22:54.489Z</published>
    <updated>2020-10-24T07:22:54.489Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Optical Character Recognition (OCR)</title>
    <link href="https://yanyubing.xyz/2020/10/24/Optical%20Character%20Recognition%20(OCR)/"/>
    <id>https://yanyubing.xyz/2020/10/24/Optical%20Character%20Recognition%20(OCR)/</id>
    <published>2020-10-24T07:22:33.171Z</published>
    <updated>2020-10-24T07:22:33.171Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>face Applications</title>
    <link href="https://yanyubing.xyz/2020/10/24/face%20Applications/"/>
    <id>https://yanyubing.xyz/2020/10/24/face%20Applications/</id>
    <published>2020-10-24T07:21:53.375Z</published>
    <updated>2020-10-24T07:21:53.375Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>deep learning</title>
    <link href="https://yanyubing.xyz/2020/10/24/deep%20learning/"/>
    <id>https://yanyubing.xyz/2020/10/24/deep%20learning/</id>
    <published>2020-10-24T07:21:28.010Z</published>
    <updated>2020-10-24T07:21:28.010Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>how do i get start</title>
    <link href="https://yanyubing.xyz/2020/10/24/how%20do%20i%20get%20start/"/>
    <id>https://yanyubing.xyz/2020/10/24/how%20do%20i%20get%20start/</id>
    <published>2020-10-24T07:20:37.693Z</published>
    <updated>2020-10-24T09:12:26.152Z</updated>
    
    <content type="html"><![CDATA[<h2 id="How-Do-I-Get-Started"><a href="#How-Do-I-Get-Started" class="headerlink" title="How Do I Get Started?"></a>How Do I Get Started?</h2><p> <strong>Step #1: Install OpenCV + Python on Your System (Beginner)</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">opencv-python: This repository contains just the main modules of the OpenCV library. If you’re a PyImageSearch reader you do not want to install this package.</span><br><span class="line"></span><br><span class="line">opencv-contrib-python: The opencv-contrib-python repository contains both the main modules along with the contrib modules — this is the library I recommend you install as it includes all OpenCV functionality.</span><br><span class="line"></span><br><span class="line">opencv-python-headless: Same as opencv-python but no GUI functionality. Useful for headless systems.</span><br><span class="line"></span><br><span class="line">opencv-contrib-python-headless: Same as opencv-contrib-python but no GUI functionality. Useful for headless systems.</span><br><span class="line"></span><br><span class="line">所以对于一个系统而言，只需要安装：pip install opencv-contrib-python</span><br><span class="line"></span><br><span class="line">精华1：we can leverage a few tricks to create the illusion of higher FPS</span><br><span class="line">多帧显示：</span><br><span class="line">①在物体运动较慢的时候适用</span><br><span class="line">②用户体验很重要的时候适用</span><br><span class="line">原理：</span><br><span class="line">①获取之前帧的检测，在当前帧中绘制，展示当前帧</span><br></pre></td></tr></table></figure><p> <strong>Step #2: Understand Command Line Arguments (Beginner)</strong> </p><p> <strong>Step #3: Learn OpenCV by Example (Beginner)</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Loading an image</span><br><span class="line">Accessing individual pixels</span><br><span class="line">Array/Region of Interest (ROI) cropping</span><br><span class="line">Resizing images</span><br><span class="line">Rotating an image</span><br><span class="line">Edge detection</span><br><span class="line">Thresholding</span><br><span class="line">Drawing lines, rectangles, circles, and text on an image</span><br><span class="line">Masking and bitwise operations</span><br><span class="line">Contour and shape detection</span><br><span class="line">…and more!</span><br><span class="line"></span><br><span class="line">注意RGB顺序：在OpenCV彩色图像中，RGB（红色，绿色，蓝色）颜色空间中的每个像素都有一个三元组：（B，G，R ）</span><br></pre></td></tr></table></figure><p> <strong>Step #4: Build OpenCV Mini-Projects (Beginner)</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">OpenCV: Resolving NoneType errors(NoneType错误)</span><br><span class="line">1.图片路径错误</span><br><span class="line">2.图片格式没有被支持，如JPEG在linux系统上</span><br><span class="line">3.cv2.VideoCapture的视频流，①视频流地址错误②没有安装正确的视频编解码器，在这种情况下，您需要先安装编解码器，然后重新编译并重新安装OpenCV③无法通过OpenCV访问您的网络摄像头。 这可能是由于多种原因，包括缺少驱动程序，传递给cv2.VideoCapture的错误索引，或者仅仅是您的网络摄像头未正确连接到系统。</span><br><span class="line">解决方案：</span><br><span class="line">①本质错误就直接解决②读取过程偶尔出现，则使用异常处理跳过异常帧</span><br><span class="line"></span><br><span class="line">Rotate images (correctly) with OpenCV and Python</span><br><span class="line">1.图片旋转之后部分像素丢失</span><br><span class="line">解决方案：</span><br><span class="line">①我们可以通过修改cv2.getRotationMatrix2D返回的矩阵来确保将整个图像保留在视野中。</span><br><span class="line"></span><br><span class="line">OpenCV and Python Color Detection</span><br><span class="line">颜色范围([17, 15, 100], [50, 56, 200])</span><br><span class="line">cv2.inRange()方法</span><br><span class="line"></span><br><span class="line">Super fast color transfer between images</span><br><span class="line">步骤1： 输入source和target。源图像包含您要target图像模仿的色彩空间。在此页面顶部的图中，左侧的日落图像是my source，中间的图像是my target，右侧的图像是source应用到的色彩空间target。</span><br><span class="line">步骤2： 将source和target图像都转换为L * a * b *颜色空间。L * a * b *颜色空间模拟了感知均匀性，其中颜色值的微小变化也应该在颜色重要性上产生相对相等的变化。与标准RGB颜色空间相比，L * a * b *颜色空间在模仿人类如何解释颜色方面做得更好，并且您将看到，它在颜色转移方面效果很好。</span><br><span class="line">步骤3： 分别为source和分割频道target。</span><br><span class="line">步骤4： 为source和target图像计算每个L * a * b *通道的平均值和标准差。</span><br><span class="line">步骤5：target从target通道中 减去图像的L * a * b *通道的平均值。</span><br><span class="line">步骤6：target 按标准偏差target除以的标准偏差source乘以通道的比例来 缩放target 通道。</span><br><span class="line">步骤7： 为加上L * a * b *通道的均值source。</span><br><span class="line">步骤8： 裁剪掉[0，255]范围之外的所有值。（注意： 此步骤不是原始文章的一部分。由于OpenCV如何处理色彩空间转换，所以我添加了此步骤。如果要以其他语言/库实现此算法，则必须执行色彩空间转换您自己，或了解进行转换的库如何工作）。</span><br><span class="line">第9步： 合并频道。</span><br><span class="line">步骤10： 从L * a * b *空间转换回RGB颜色空间。</span><br><span class="line">问题：有一个特别的缺点-它依赖于全局颜色统计信息，因此像素强度值相似的大区域会极大地影响平均值（进而影响总体颜色传递）。</span><br><span class="line">解决方案：</span><br><span class="line">选项1： 计算要模拟颜色的较小关注区域（ROI）中的源图像的均值和标准偏差，而不是使用整个图像。采用这种方法将使您的均值和标准差更好地表示您要使用的色彩空间。</span><br><span class="line">选项2： 第二种方法是将k均值应用于两个图像。您可以在L * a * b *颜色空间中的每个图像的像素强度上聚类，然后使用欧几里德距离确定最相似的两个图像之间的质心。然后，仅计算每个区域内的统计信息。再次，这将使您的均值和标准差更具“局部”效果，并有助于缓解全局统计数据的过分表达问题。当然，缺点是这种方法的速度要慢得多，因为您现在已经添加了昂贵的群集步骤。</span><br><span class="line"></span><br><span class="line">OpenCV center of contour</span><br><span class="line">1.检测图像中每个形状的轮廓</span><br><span class="line">2.计算轮廓的中心-也称为区域的质心</span><br><span class="line"></span><br><span class="line">Finding Shapes in Images using Python and OpenCV</span><br><span class="line">经常使用：cv2.inRange  and cv2.findContours  functions.</span><br><span class="line"></span><br><span class="line">Finding extreme points in contours with OpenCV</span><br><span class="line"></span><br><span class="line">Sorting Contours using Python and OpenCV</span><br><span class="line"></span><br><span class="line">OpenCV shape detection</span><br><span class="line"></span><br><span class="line">Determining object color with OpenCV</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;How-Do-I-Get-Started&quot;&gt;&lt;a href=&quot;#How-Do-I-Get-Started&quot; class=&quot;headerlink&quot; title=&quot;How Do I Get Started?&quot;&gt;&lt;/a&gt;How Do I Get Started?&lt;/h2
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>系统从0开始cv总结</title>
    <link href="https://yanyubing.xyz/2020/10/24/%E7%B3%BB%E7%BB%9F%E4%BB%8E0%E5%BC%80%E5%A7%8Bcv%E6%80%BB%E7%BB%93/"/>
    <id>https://yanyubing.xyz/2020/10/24/%E7%B3%BB%E7%BB%9F%E4%BB%8E0%E5%BC%80%E5%A7%8Bcv%E6%80%BB%E7%BB%93/</id>
    <published>2020-10-24T06:38:12.911Z</published>
    <updated>2020-10-24T07:26:15.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从0开始cv之路整理-偏应用"><a href="#从0开始cv之路整理-偏应用" class="headerlink" title="从0开始cv之路整理-偏应用"></a>从0开始cv之路整理-偏应用</h1><p>参见：<a href="https://www.pyimagesearch.com/start-here/" target="_blank" rel="noopener">https://www.pyimagesearch.com/start-here/</a></p><p>windows10+pytorch实现</p><h2 id="How-Do-I-Get-Started"><a href="#How-Do-I-Get-Started" class="headerlink" title="How Do I Get Started?"></a>How Do I Get Started?</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Install OpenCV + Python on Your System (Beginner)</span><br><span class="line">Step #2: Understand Command Line Arguments (Beginner)</span><br><span class="line">Step #3: Learn OpenCV by Example (Beginner)</span><br><span class="line">Step #4: Build OpenCV Mini-Projects (Beginner)</span><br><span class="line">Step #5: Solve More Advanced OpenCV Projects (Intermediate)</span><br><span class="line">Step #6: Pick Your Niche (Intermediate)</span><br></pre></td></tr></table></figure><h2 id="Deep-Learning"><a href="#Deep-Learning" class="headerlink" title="Deep Learning"></a>Deep Learning</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Configure your Deep Learning environment (Beginner)</span><br><span class="line">Step #2: Train Your First Neural Network (Beginner)</span><br><span class="line">Step #3: Understand Convolutional Neural Networks (Beginner)</span><br><span class="line">Step #4: Build Your Own Image Dataset (Intermediate)</span><br><span class="line">Step #5: Train a CNN on Your Dataset (Intermediate)</span><br><span class="line">Step #6: Tuning Your Learning Rate (Intermediate)</span><br><span class="line">Step #7: Data Augmentation (Intermediate)</span><br><span class="line">Step #8: Feature Extraction and Fine-tuning Pre-trained Networks (Intermediate)</span><br><span class="line">Step #9: Video Classification (Advanced)</span><br><span class="line">Step #10: Multi-Input and Multi-Output Networks (Advanced)</span><br><span class="line">Step #11: Improve Your Deep Learning Models (Advanced)</span><br><span class="line">Step #12: AutoML and Auto-Keras (Advanced)</span><br></pre></td></tr></table></figure><h2 id="Face-Applications"><a href="#Face-Applications" class="headerlink" title="Face Applications"></a>Face Applications</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Install OpenCV, dlib, and face_recognition (Beginner)</span><br><span class="line">Step #2: Detect Faces in Images and Video (Beginner)</span><br><span class="line">Step #3: Discover Facial Landmarks (Intermediate)</span><br><span class="line">Step #4: Create Face Application Mini-Projects (Intermediate)</span><br><span class="line">Step #5: Build a Face Recognition Dataset (Intermediate)</span><br><span class="line">Step #6: Face Recognition (Intermediate)</span><br><span class="line">Step #7: Improve Your Face Recognition Accuracy (Intermediate)</span><br><span class="line">Step #8: Detect Fake Faces and Perform Anti-Face Spoofing</span><br></pre></td></tr></table></figure><h2 id="Optical-Character-Recognition-OCR"><a href="#Optical-Character-Recognition-OCR" class="headerlink" title="Optical Character Recognition (OCR)"></a>Optical Character Recognition (OCR)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Install OpenCV (Beginner)</span><br><span class="line">Step #2: Discover Tesseract for OCR (Beginner)</span><br><span class="line">Step #3: OCR Without Tesseract (Intermediate)</span><br><span class="line">Step #4: Practice OCR with Mini-Projects (Intermediate)</span><br><span class="line">Step #5: Text Detection in Natural Scenes (Intermediate)</span><br><span class="line">Step #6: Combine Text Detection with OCR (Advanced)</span><br></pre></td></tr></table></figure><h2 id="Object-Detection"><a href="#Object-Detection" class="headerlink" title="Object Detection"></a>Object Detection</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Configure Your Development Environment (Beginner)</span><br><span class="line">Step #2: Create a Basic Object Detector/Tracker (Beginner)</span><br><span class="line">Step #3: Basic Person Detection (Beginner)</span><br><span class="line">Step #4: Improving Our Basic Object Detector (Beginner)</span><br><span class="line">Step #5: Your First Deep Learning Object Detector (Intermediate)</span><br><span class="line">Step #6: Real-time Object Detection with Deep Learning (Intermediate)</span><br><span class="line">Step #7: Deep Learning Object Detectors (Intermediate)</span><br><span class="line">Step #8: Evaluate Deep Learning Object Detector Performance (Intermediate)</span><br><span class="line">Step #9: From Object Detection to Semantic/Instance Segmentation (Intermediate)</span><br><span class="line">Step #10: Object Detection on Embedded Devices (Advanced)</span><br></pre></td></tr></table></figure><h2 id="Object-Tracking"><a href="#Object-Tracking" class="headerlink" title="Object Tracking"></a>Object Tracking</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Install OpenCV on Your System (Beginner)</span><br><span class="line">Step #2: Your First Object Tracker (Beginner)</span><br><span class="line">Step #3: Discover Centroid Tracking (Intermediate)</span><br><span class="line">Step #4: Better Object Tracking Algorithms (Intermediate)</span><br><span class="line">Step #5: Multi-Object Tracking (Intermediate)</span><br><span class="line">Step #6: Applied Object Tracking and Counting (Intermediate)</span><br></pre></td></tr></table></figure><h2 id="Instance-Segmentation-and-Semantic-Segmentation"><a href="#Instance-Segmentation-and-Semantic-Segmentation" class="headerlink" title="Instance Segmentation and Semantic Segmentation"></a>Instance Segmentation and Semantic Segmentation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Configure Your Development Environment (Beginner)</span><br><span class="line">Step #2: Segmentation vs. Object Detection (Intermediate)</span><br><span class="line">Step #3: Applying Mask R-CNN (Intermediate)</span><br><span class="line">Step #4: Semantic Segmentation with OpenCV (Intermediate)</span><br></pre></td></tr></table></figure><h2 id="Embedded-and-IoT-Computer-Vision"><a href="#Embedded-and-IoT-Computer-Vision" class="headerlink" title="Embedded and IoT Computer Vision"></a>Embedded and IoT Computer Vision</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Configure Your Embedded/IoT Device (Beginner)</span><br><span class="line">Step #2: Your First Embedded Computer Vision Project (Beginner)</span><br><span class="line">Step #3: Create Embedded/IoT Mini-Projects (Intermediate)</span><br><span class="line">Step #4: Image Classification on Embedded Devices (Intermediate)</span><br><span class="line">Step #5: Object Detection on Embedded Devices (Intermediate)</span><br></pre></td></tr></table></figure><h2 id="Computer-Vision-on-the-Raspberry-Pi"><a href="#Computer-Vision-on-the-Raspberry-Pi" class="headerlink" title="Computer Vision on the Raspberry Pi"></a>Computer Vision on the Raspberry Pi</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Install OpenCV on the Raspberry Pi (Beginner)</span><br><span class="line">Step #2: Development on the RPi (Beginner)</span><br><span class="line">Step #3: Access your Raspberry Pi Camera or USB Webcam (Beginner)</span><br><span class="line">Step #4: Your First Computer Vision App on the Raspberry Pi (Beginner)</span><br><span class="line">Step #5: OpenCV, GPIO, and the Raspberry Pi (Beginner)</span><br><span class="line">Step #6: Facial Applications on the Raspberry Pi (Intermediate)</span><br><span class="line">Step #7: Apply Deep Learning on the Raspberry Pi (Intermediate)</span><br><span class="line">Step #8: Work with Servos and Additional Hardware (Intermediate)</span><br><span class="line">Step #9: Utilize Intel’s NCS for Faster Deep Learning (Advanced)</span><br><span class="line">Step #10: Utilize Google Coral USB Accelerator for Faster Deep Learning (Advanced)</span><br></pre></td></tr></table></figure><h2 id="Medical-Computer-Vision"><a href="#Medical-Computer-Vision" class="headerlink" title="Medical Computer Vision"></a>Medical Computer Vision</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Configure Your Development Environment (Beginner)</span><br><span class="line">Step #2: Your First Medical Computer Vision Project (Beginner)</span><br><span class="line">Step #3: Create Medical Computer Vision Mini-Projects (Intermediate)</span><br><span class="line">Step #4: Solve Real-World Medical Computer Vision Projects (Advanced)</span><br></pre></td></tr></table></figure><h2 id="Working-with-Video"><a href="#Working-with-Video" class="headerlink" title="Working with Video"></a>Working with Video</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Install OpenCV on Your System (Beginner)</span><br><span class="line">Step #2: Accessing your Webcam (Beginner)</span><br><span class="line">Step #3: Face Detection in Video (Beginner)</span><br><span class="line">Step #4: Face Applications in Video (Intermediate)</span><br><span class="line">Step #5: Object Detection in Video (Intermediate)</span><br><span class="line">Step #6: Create OpenCV and Video Mini-Projects (Beginner/Intermediate)</span><br><span class="line">Step #7: Image/Video Streaming with OpenCV (Intermediate)</span><br><span class="line">Step #8: Video Classification with Deep Learning (Advanced)</span><br></pre></td></tr></table></figure><h2 id="Image-Search-Engines"><a href="#Image-Search-Engines" class="headerlink" title="Image Search Engines"></a>Image Search Engines</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Step #1: Install OpenCV on your System (Beginner)</span><br><span class="line">Step #2: Build Your First Image Search Engine (Beginner)</span><br><span class="line">Step #3: Understand Image Quantification (Beginner)</span><br><span class="line">Step #4: The 4 Steps of Any Image Search Engine (Beginner)</span><br><span class="line">Step #5: Build Image Search Engine Mini-Projects (Beginner)</span><br><span class="line">Step #6: Image Hashing (Intermediate)</span><br><span class="line">Step #7: Scaling Image Hashing Search Engines (Intermediate)</span><br></pre></td></tr></table></figure><h2 id="Interviews-Case-Studies-and-Success-Stories"><a href="#Interviews-Case-Studies-and-Success-Stories" class="headerlink" title="Interviews, Case Studies, and Success Stories"></a>Interviews, Case Studies, and Success Stories</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Step #1: A Day in the Life of Adrian Rosebrock (Beginner)</span><br><span class="line">Step #2: Intro to Computer Vision (Beginner)</span><br><span class="line">Step #3: Computer Vision — Where are We Going Next? (Beginner)</span><br><span class="line">Step #4: From Developer to CTO (Beginner)</span><br><span class="line">Step #5: $30,500 in Grant Funding (Beginner)</span><br><span class="line">Step #6: Winning Kaggle’s Most Competitive Image Classification Challenge Ever (Beginner)</span><br><span class="line">Step #7: Landing a Research and Development (R&amp;D) Position (Beginner)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;从0开始cv之路整理-偏应用&quot;&gt;&lt;a href=&quot;#从0开始cv之路整理-偏应用&quot; class=&quot;headerlink&quot; title=&quot;从0开始cv之路整理-偏应用&quot;&gt;&lt;/a&gt;从0开始cv之路整理-偏应用&lt;/h1&gt;&lt;p&gt;参见：&lt;a href=&quot;https://ww
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>实例分割</title>
    <link href="https://yanyubing.xyz/2020/10/20/%E5%AE%9E%E4%BE%8B%E5%88%86%E5%89%B2/"/>
    <id>https://yanyubing.xyz/2020/10/20/%E5%AE%9E%E4%BE%8B%E5%88%86%E5%89%B2/</id>
    <published>2020-10-20T09:16:23.229Z</published>
    <updated>2020-10-20T09:23:30.567Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实例分割"><a href="#实例分割" class="headerlink" title="实例分割"></a>实例分割</h1><p>1.对比与目标检测，更加的精确，获取的每个像素值对应的对象，基于pytorch框架</p><p>yolact</p><p>源码：<a href="https://github.com/dbolya/yolact" target="_blank" rel="noopener">https://github.com/dbolya/yolact</a></p><p>教程：<a href="https://www.youtube.com/watch?v=KEHVHHnNDv0" target="_blank" rel="noopener">https://www.youtube.com/watch?v=KEHVHHnNDv0</a></p><p>mask rcnn</p><p>源码：<a href="https://github.com/facebookresearch/maskrcnn-benchmark" target="_blank" rel="noopener">https://github.com/facebookresearch/maskrcnn-benchmark</a></p><p>教程：<a href="https://www.youtube.com/watch?v=yltGEJxrrqQ" target="_blank" rel="noopener">https://www.youtube.com/watch?v=yltGEJxrrqQ</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;实例分割&quot;&gt;&lt;a href=&quot;#实例分割&quot; class=&quot;headerlink&quot; title=&quot;实例分割&quot;&gt;&lt;/a&gt;实例分割&lt;/h1&gt;&lt;p&gt;1.对比与目标检测，更加的精确，获取的每个像素值对应的对象，基于pytorch框架&lt;/p&gt;
&lt;p&gt;yolact&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据读取</title>
    <link href="https://yanyubing.xyz/2020/10/20/%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%8F%96/"/>
    <id>https://yanyubing.xyz/2020/10/20/%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%8F%96/</id>
    <published>2020-10-20T06:13:50.788Z</published>
    <updated>2020-10-20T07:43:57.681Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python进行数据的读取，储存"><a href="#python进行数据的读取，储存" class="headerlink" title="python进行数据的读取，储存"></a>python进行数据的读取，储存</h1><p>一：数据的主要形式</p><p>文本，视频，音频，MySQL数据库</p><p>二：文本</p><p><a href="https://zhuanlan.zhihu.com/p/25087295" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25087295</a></p><p>三：视频</p><p><a href="https://blog.csdn.net/qq_25436597/article/details/79621833" target="_blank" rel="noopener">https://blog.csdn.net/qq_25436597/article/details/79621833</a></p><p>四：音频</p><p><a href="https://blog.csdn.net/luolinll1212/article/details/97954215" target="_blank" rel="noopener">https://blog.csdn.net/luolinll1212/article/details/97954215</a></p><p>五：MySQL</p><p><a href="https://my.oschina.net/u/3750423/blog/4315037" target="_blank" rel="noopener">https://my.oschina.net/u/3750423/blog/4315037</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;python进行数据的读取，储存&quot;&gt;&lt;a href=&quot;#python进行数据的读取，储存&quot; class=&quot;headerlink&quot; title=&quot;python进行数据的读取，储存&quot;&gt;&lt;/a&gt;python进行数据的读取，储存&lt;/h1&gt;&lt;p&gt;一：数据的主要形式&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>torch环境准备</title>
    <link href="https://yanyubing.xyz/2020/10/19/torch%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <id>https://yanyubing.xyz/2020/10/19/torch%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</id>
    <published>2020-10-19T09:28:17.185Z</published>
    <updated>2020-10-22T08:55:39.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="torch环境准备"><a href="#torch环境准备" class="headerlink" title="torch环境准备"></a>torch环境准备</h1><p>①装系统(windows10操作逻辑同理)</p><p><a href="https://blog.csdn.net/baidu_36602427/article/details/86548203" target="_blank" rel="noopener">https://blog.csdn.net/baidu_36602427/article/details/86548203</a></p><p><a href="https://blog.csdn.net/qq_38949027/article/details/102854940华硕主板启动黑屏" target="_blank" rel="noopener">https://blog.csdn.net/qq_38949027/article/details/102854940华硕主板启动黑屏</a></p><p>②安装向日葵</p><p>方便远程，可以继续安装其他比较耗时的软件</p><p><a href="https://sunlogin.oray.com/download/" target="_blank" rel="noopener">https://sunlogin.oray.com/download/</a></p><p>③输入法</p><p><a href="https://www.jianshu.com/p/cafe12618293" target="_blank" rel="noopener">https://www.jianshu.com/p/cafe12618293</a></p><p>④安装pycharm</p><p><a href="https://blog.csdn.net/HelloZEX/article/details/80747274" target="_blank" rel="noopener">https://blog.csdn.net/HelloZEX/article/details/80747274</a></p><p>⑤安装anconda，创建yolov5虚拟环境</p><p><a href="https://blog.csdn.net/BigData_Mining/article/details/102954343" target="_blank" rel="noopener">https://blog.csdn.net/BigData_Mining/article/details/102954343</a></p><p>⑥下载yolov5源码</p><p><a href="https://github.com/ultralytics/yolov5" target="_blank" rel="noopener">https://github.com/ultralytics/yolov5</a></p><p>⑦yolov5虚拟环境依赖包的配置<br>⑧配置cuda，cudnn，安装pytorch</p><p><a href="https://blog.csdn.net/u013084111/article/details/104167056" target="_blank" rel="noopener">https://blog.csdn.net/u013084111/article/details/104167056</a></p><p>⑨下载权重文件<br>⑩demo测试</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;torch环境准备&quot;&gt;&lt;a href=&quot;#torch环境准备&quot; class=&quot;headerlink&quot; title=&quot;torch环境准备&quot;&gt;&lt;/a&gt;torch环境准备&lt;/h1&gt;&lt;p&gt;①装系统(windows10操作逻辑同理)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>course.fast.ai</title>
    <link href="https://yanyubing.xyz/2020/10/19/course.fast.ai/"/>
    <id>https://yanyubing.xyz/2020/10/19/course.fast.ai/</id>
    <published>2020-10-19T08:13:12.180Z</published>
    <updated>2020-10-21T03:08:44.502Z</updated>
    
    <content type="html"><![CDATA[<h1 id="course-fast-ai"><a href="#course-fast-ai" class="headerlink" title="course.fast.ai"></a>course.fast.ai</h1><p><a href="https://course.fast.ai" target="_blank" rel="noopener">https://course.fast.ai</a></p><h3 id="一：小tips"><a href="#一：小tips" class="headerlink" title="一：小tips"></a>一：小tips</h3><p>1.Mac不支持英伟达GPU</p><p>2.找模型的过程就是优化权值的过程：权值分配</p><p>3.SGD(随机梯度下降)：用来更新权值</p><p>4.神经网络的本质只是加法和乘法的运算，只是会运行很多很多次</p><p>5.本质：(输入,权值)得到预测值，预测值和label对比得到loss，loss反过来调整权值。我们需要的是data和label。</p><p>6.bing有搜索图片的API</p><h3 id="二：过拟合"><a href="#二：过拟合" class="headerlink" title="二：过拟合"></a>二：过拟合</h3><p>1.产生过拟合的原因</p><p>模型复杂程度是相对的，复杂的模型可能会造成过拟合。</p><p>2.过拟合的表现形式</p><p>训练损失继续下降，而验证集损失开始上升</p><h3 id="三：迁移学习"><a href="#三：迁移学习" class="headerlink" title="三：迁移学习"></a>三：迁移学习</h3><p>1.怎么做</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;course-fast-ai&quot;&gt;&lt;a href=&quot;#course-fast-ai&quot; class=&quot;headerlink&quot; title=&quot;course.fast.ai&quot;&gt;&lt;/a&gt;course.fast.ai&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://cours
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>瑕疵检测</title>
    <link href="https://yanyubing.xyz/2020/10/19/%E7%91%95%E7%96%B5%E6%A3%80%E6%B5%8B/"/>
    <id>https://yanyubing.xyz/2020/10/19/%E7%91%95%E7%96%B5%E6%A3%80%E6%B5%8B/</id>
    <published>2020-10-19T05:54:04.809Z</published>
    <updated>2020-10-19T05:57:13.674Z</updated>
    
    <content type="html"><![CDATA[<p>​                                                                   瓦片裂痕检测</p><h2 id="传统算法方向的选择"><a href="#传统算法方向的选择" class="headerlink" title="传统算法方向的选择"></a>传统算法方向的选择</h2><p>最近做图像处理与识别相关的事情，先从OpenCV/Matlab入手，看传统算法在瑕疵检测方向能做到什么程度。</p><p>因之前并没有相关的经验，乍开始生怕闭门造车，遂多方搜寻，相关的会议与论述很多，不乏深度学习或者深度学习与传统算法相结合的，以有限的资源来看，深度学习并没有特别大的优势：表现在</p><ol><li><p>深度学习对训练图库的要求很高，很难得到很好的训练结果</p></li><li><p>深度学习的灵活度较低，若适用场景有些许改变，均需要重新训练，这在商用时会是很大的问题</p></li><li><p>深度学习的部署成本较高，同时对部署场景有较高要求（光线/摄像效果等）*<br>当然，深度学习大势所趋，也不必因噎废食，万一是一时的浅见呢。后续也会投身到这个方向去。</p></li></ol><h2 id="瑕疵检测关注的两个问题"><a href="#瑕疵检测关注的两个问题" class="headerlink" title="瑕疵检测关注的两个问题"></a>瑕疵检测关注的两个问题</h2><h3 id="瑕疵的标注"><a href="#瑕疵的标注" class="headerlink" title="瑕疵的标注"></a>瑕疵的标注</h3><p>对瑕疵的标注是为了更直观的展示，主要是给人看的</p><h3 id="瑕疵的量化"><a href="#瑕疵的量化" class="headerlink" title="瑕疵的量化"></a>瑕疵的量化</h3><p>真正机器关心的是怎么量化，是用数量表示还是百分比是个值得考虑的问题</p><h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2><h3 id="1-图像去噪-gt-灰度化-gt-二值化"><a href="#1-图像去噪-gt-灰度化-gt-二值化" class="headerlink" title="1.图像去噪-&gt;灰度化-&gt;二值化"></a>1.图像去噪-&gt;灰度化-&gt;二值化</h3><p>二值化之后就可以看到绝大部分的瑕疵点已经凸显出来了，但是有三个问题：</p><ol><li>黑点瑕疵与白点瑕疵是二值化的两个极端，故无法同时出现。</li><li>量化如何去除Logo与其他印刷的干扰<br>问题1后续用边缘检测替代<br>问题2采用像素点计数的方法，计算百分比，然后与无瑕疵的百分比作比较，准确度不高，也显得 low的。</li></ol><h3 id="2-图像去噪-gt-灰度化-gt-canny-gt-形态学（闭运算）-gt-连通域"><a href="#2-图像去噪-gt-灰度化-gt-canny-gt-形态学（闭运算）-gt-连通域" class="headerlink" title="2.图像去噪-&gt;灰度化-&gt;canny-&gt;形态学（闭运算）-&gt;连通域"></a>2.图像去噪-&gt;灰度化-&gt;canny-&gt;形态学（闭运算）-&gt;连通域</h3><p>边缘检测后进行闭运算，瑕疵会形成大大小小的连通域，可以统计连通域的个数，然后与无瑕疵logo与其他印刷形成的连通域个数作比较，这种情况几乎不会漏掉。这是感觉可行的选择之一。</p><h3 id="3-OpenCV-matchTemplate"><a href="#3-OpenCV-matchTemplate" class="headerlink" title="3.OpenCV matchTemplate"></a>3.OpenCV matchTemplate</h3><p>实验室条件下，可以营造比较理想的条件，所以考虑了OpenCV的模板匹配，同时也测试了模板匹配在不理想情况下的表现。<br>结果证明因为手机瑕疵检测的需求目标较低，模板匹配是比较能够胜任的一个办法。只要模板与识别目标的拍摄角度差别不是太大，都可以很好的识别瑕疵。图片的轻微缩放大多也可以应付。</p><h2 id="其他处理"><a href="#其他处理" class="headerlink" title="其他处理"></a>其他处理</h2><p>前面都是软件方面处理的流程，在如何获得更加理想的图片方面也做了一些尝试：</p><ol><li>采用各种不同颜色的光源，如蓝光/红光，区别不大</li><li>对图片进行白平衡调整，有改善</li><li>摄像头加偏振镜防止图像反光，有改善但不明显</li><li>图片浮雕处理，肉眼看上去瑕疵显著了，但对机器而言并没有区别，故没有采纳</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​                                                                   瓦片裂痕检测&lt;/p&gt;
&lt;h2 id=&quot;传统算法方向的选择&quot;&gt;&lt;a href=&quot;#传统算法方向的选择&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>数据集</title>
    <link href="https://yanyubing.xyz/2020/08/28/%E6%95%B0%E6%8D%AE%E9%9B%86/"/>
    <id>https://yanyubing.xyz/2020/08/28/%E6%95%B0%E6%8D%AE%E9%9B%86/</id>
    <published>2020-08-28T02:10:47.267Z</published>
    <updated>2020-08-28T02:33:26.869Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h1><p>1.数据是算法的粮食，没有好的数据，算法再优秀，也生产不出来好的模型；作为AI工程师，最开始就要了解公司数据的产生过程，才可以很好的把控模型的优劣</p><p>2.目标检测/分类、数据集制作过程应该有详细的生成流程，包括如下：</p><p>①数据集产生的基本要求（应当与模型实际工作环境尽量保持一致或者，同时需要包含到工作环境中的一切可能性，例如图片的输入大小。。。）</p><p>②数据集的产生，采样过程（如无人机飞行录制视频、拍照等形式）</p><p>③定标注种类，定标注要求（与实际业务挂钩）</p><p>④组织标注人员，审查人员（对工作量的预估，每天可以生产多少数据，费用计算。。。）</p><p>⑤数据集合格之后进行模型训练，对比训练效果，进行微调来增加精度</p><p>⑥精度达到一定程度的时候，开始直接使用模型来标注数据集，标注错误的地方人工修改</p><p>3.补充</p><p>①数据的生成过程中需要大量的人工操作，其中部分可以使用代码处理可以节约大量的时间</p><p>如：</p><p>数据标注文本规范的检查（yolo对应的box字段为5个，如果哪一行出现了10个字段，则会导致代码报错）</p><p>类别的检测（裁剪出box保存到对应类别目录下，box文件名中包含原始图片的文件名，检测标注类别是否准确，修改），同时也做了类别的统计</p><p>②数据生产过程应当作为一个流水线的工作形态，直到完成最优模型之前，一直需要；标注的数据出问题，会导致耗费大量的精力来修改，更正，得不偿失!</p><p>③为了达到最优的模型，数据集上面不能掉链子</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据集&quot;&gt;&lt;a href=&quot;#数据集&quot; class=&quot;headerlink&quot; title=&quot;数据集&quot;&gt;&lt;/a&gt;数据集&lt;/h1&gt;&lt;p&gt;1.数据是算法的粮食，没有好的数据，算法再优秀，也生产不出来好的模型；作为AI工程师，最开始就要了解公司数据的产生过程，才可以很好的
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
